{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/searchBox/searchBox.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","type","class","placeholder","onChange","handleChange","App","e","setState","searchBox","target","value","state","a","fetch","method","response","json","users","this","console","log","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mVAIaA,EAAO,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAI,UACJC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,eAEL,mCAAML,EAAMI,QAAQE,KAApB,OACA,4BAAIN,EAAMI,QAAQG,YCNTC,EAAW,SAACR,GAAD,OACtB,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCJZM,G,MAAY,SAACX,GAAD,OACvB,uBACEY,KAAK,SACLC,MAAM,SACNC,YAAad,EAAMc,YACnBC,SAAUf,EAAMgB,iBCgELC,G,wDA9Cb,aAAe,IAAD,8BACZ,gBAuBFD,aAAe,SAACE,GACd,EAAKC,SAAS,CAAEC,UAAWF,EAAEG,OAAOC,SAtBpC,EAAKC,MAAQ,CACXd,SAAU,GACVW,UAAW,IALD,E,4FASd,8BAAAI,EAAA,+EAE2BC,MACrB,4CACA,CACEC,OAAQ,QALhB,cAEUC,EAFV,gBAQwBA,EAASC,OARjC,OAQUC,EARV,OASIC,KAAKX,SAAS,CAAEV,SAAUoB,IAT9B,kDAWIE,QAAQC,IAAI,SAAZ,MAXJ,0D,0EAmBA,WAAU,IAAD,EACyBF,KAAKP,MAA7Bd,EADD,EACCA,SAAUW,EADX,EACWA,UACZa,EAAmBxB,EAASyB,QAAO,SAAC9B,GAAD,OACvCA,EAAQE,KAAK6B,cAAcC,SAAShB,EAAUe,kBAEhD,OACE,sBAAKlC,UAAU,MAAf,UACE,6CACA,cAAC,EAAD,CACEa,YAAY,qBACZE,aAAcc,KAAKd,eAErB,cAAC,EAAD,CAAUP,SAAUwB,W,GAzCVI,cCdHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.18329e41.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card.styles.css\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      alt=\"monster\"\r\n      src={`https://robohash.org/${props.monster.id}?set=set3`}\r\n    ></img>\r\n    <h2> {props.monster.name} </h2>\r\n    <p>{props.monster.email}</p>\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./card-list.styles.css\";\r\nimport { Card } from \"../card/card.component.jsx\";\r\n\r\nexport const CardList = (props) => (\r\n  <div className=\"card-list\">\r\n    {props.monsters.map((monster) => (\r\n      <Card key={monster.id} monster={monster}></Card>\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\n\r\nimport \"./searchBox.styles.css\";\r\n\r\nexport const SearchBox = (props) => (\r\n  <input\r\n    type=\"search\"\r\n    class=\"search\"\r\n    placeholder={props.placeholder}\r\n    onChange={props.handleChange}\r\n  ></input>\r\n);\r\n","import { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/searchBox/searchBox.component.jsx\";\nimport \"./App.css\";\n\n// const App = () => {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// };\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchBox: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const response = await fetch(\n        \"http://jsonplaceholder.typicode.com/users\",\n        {\n          method: \"GET\",\n        }\n      );\n      const users = await response.json();\n      this.setState({ monsters: users });\n    } catch (e) {\n      console.log(\"Error:\", e);\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchBox: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchBox } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchBox.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Monster-dex</h1>\n        <SearchBox\n          placeholder=\"Search monsters...\"\n          handleChange={this.handleChange}\n        ></SearchBox>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}